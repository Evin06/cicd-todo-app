name: CI/CD Workflow

on:
  push:
    branches:
      - main # Déclenchement du déploiement de test sur chaque push sur la branche principale
      
jobs:
  test-deployment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Node.js (Frontend & Backend)
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # Spécifiez la version Node.js selon vos besoins

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: |
            frontend/node_modules
            backend/node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

  frontend-tasks:
    runs-on: ubuntu-latest
    needs: test-deployment
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies and audit (Frontend)
        working-directory: ./frontend
        run: |
          npm install
          npm audit

      - name: Linting du code (Frontend)
        working-directory: ./frontend
        run: npm run lint

  dbtest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run docker-compose
        uses: hoverkraft-tech/compose-action@v2.0.1
        with:
          compose-file: "./docker-compose.yml"

  backend-tasks:
    runs-on: ubuntu-latest
    needs: dbtest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies and audit (Backend)
        working-directory: ./backend
        run: |
          npm install
          npm audit

      - name: Linting du code (Backend)
        working-directory: ./backend
        run: npm run lint

      - name: Install dependencies and audit (Backend)
        working-directory: ./backend
        run: |
          npx jest --watchAll


