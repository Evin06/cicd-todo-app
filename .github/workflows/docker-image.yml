name: Docker Build and Push

on:
  push:
    branches:
      - main
    paths:
      - 'frontend/**'
      - 'backend/**'
  workflow_dispatch:

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

        # Étape 2: Vérifier les fichiers modifiés dans le commit
      - name: Get modified files
        id: files
        run: |
          # Récupérer l'historique complet si ce n'est pas déjà fait
          git fetch --unshallow
          
          # Récupérer les fichiers modifiés entre le commit précédent et le commit actuel
          MODIFIED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
          echo "Modified files: $MODIFIED_FILES"
          echo "::set-output name=modified_files::$MODIFIED_FILES"
          
      - name: Install Dependencies frontend
        if: contains(steps.files.outputs.modified_files, 'frontend/')
        run: |
          npm install

      - name: Install Dependencies backend
        if: contains(steps.files.outputs.modified_files, 'backend/')
        run: |
          npm install

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build et push l'image backend uniquement si des modifications sont détectées dans le dossier backend
      - name: Build and Push Backend Image
        if: contains(steps.files.outputs.modified_files, 'backend/')
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:latest -f backend/Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/backend:latest

      # Build et push l'image frontend uniquement si des modifications sont détectées dans le dossier frontend
      - name: Build and Push Frontend Image
        if: contains(steps.files.outputs.modified_files, 'frontend/')
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:latest -f frontend/Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest
